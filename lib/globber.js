// Generated by CoffeeScript 1.6.3
(function() {
  var Glob, carrier, events, exec, spawn, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ref = require('child_process'), exec = _ref.exec, spawn = _ref.spawn;

  events = require('events');

  carrier = require('carrier');

  Glob = (function(_super) {
    __extends(Glob, _super);

    function Glob(pattern, excludePattern, options) {
      var bashCommand, ls,
        _this = this;
      bashCommand = "ls " + pattern;
      if (excludePattern != null ? excludePattern.length : void 0) {
        bashCommand += "|grep -v " + excludePattern;
      }
      ls = spawn('bash', ['-c', bashCommand], options);
      carrier.carry(ls.stdout, function(line) {
        return _this.emit('match', line);
      });
      ls.on('close', function(exitCode) {
        if (exitCode === 0 || exitCode === 1) {
          return _this.emit('end', null);
        } else {
          return _this.emit('end', new Error("ls exited with code " + exitCode));
        }
      });
    }

    return Glob;

  })(events.EventEmitter);

  module.exports = Glob;

}).call(this);
