// Generated by CoffeeScript 1.8.0
(function() {
  var Config, fs, getHelpTopics, path, printHelpTopic, projectRoot;

  path = require('path');

  fs = require('fs');

  Config = require('./config');

  projectRoot = Config.projectRoot();

  getHelpTopics = function() {
    var lakeConfig, rule, ruleFile, topic, topics, _i, _len, _ref, _ref1, _ref2;
    topics = [];
    lakeConfig = Config.config();
    _ref = lakeConfig.rules;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      ruleFile = _ref[_i];
      rule = require(path.join(projectRoot, ruleFile));
      if ((((_ref1 = rule.readme) != null ? _ref1.name : void 0) != null) && (((_ref2 = rule.readme) != null ? _ref2.path : void 0) != null)) {
        topic = {
          name: rule.readme.name,
          description: rule.description,
          path: rule.readme.path
        };
        topics.push(topic);
      }
    }
    return topics;
  };

  printHelpTopic = function(topics, requestedTopic) {
    var helpText, topic, topicFound, _i, _len;
    topicFound = false;
    for (_i = 0, _len = topics.length; _i < _len; _i++) {
      topic = topics[_i];
      if (topic.name === requestedTopic) {
        helpText = fs.readFileSync(topic.path, 'utf8');
        console.log("Help for '" + requestedTopic + "':\n");
        console.log(helpText);
        topicFound = true;
        break;
      }
    }
    if (!topicFound) {
      return console.log("Help topic '" + requestedTopic + "' doesn't exist.");
    }
  };

  module.exports.help = function() {
    var command, listTopics, topics;
    listTopics = function(topics) {
      var text, topic, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = topics.length; _i < _len; _i++) {
        topic = topics[_i];
        text = '\t' + topic.name;
        if (topic.description != null) {
          text += ' - ' + topic.description;
        }
        _results.push(console.log(text));
      }
      return _results;
    };
    topics = getHelpTopics();
    command = process.argv[2];
    if (command == null) {
      console.log("Run 'lake-help [topic]' to show additional information about a specific topic.");
      console.log("Available topics are:");
      return listTopics(topics);
    } else if (command === 'topics') {
      return listTopics(topics);
    } else {
      return printHelpTopic(topics, command);
    }
  };

}).call(this);
