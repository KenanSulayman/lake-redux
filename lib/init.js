// Generated by CoffeeScript 1.6.3
(function() {
  var async, debug, findProjectRoot, fs, inspect, knownOpts, locateNodeModulesBin, nopt, parsedArgs, path, shortHands, _ref;

  fs = require('fs');

  path = require('path');

  inspect = require('util').inspect;

  async = require('async');

  nopt = require('nopt');

  debug = require('debug')('lake-init');

  _ref = require('./file-locator'), locateNodeModulesBin = _ref.locateNodeModulesBin, findProjectRoot = _ref.findProjectRoot;

  knownOpts = {
    help: Boolean,
    force: Boolean
  };

  shortHands = {
    h: ['--help']
  };

  parsedArgs = nopt(knownOpts, shortHands, process.argv, 2);

  if (parsedArgs.help) {
    console.log('USAGE');
    console.log(inspect(knownOpts));
    console.log(inspect(shortHands));
    process.exit(0);
  }

  findProjectRoot(function(err, existingProjectRoot) {
    if (existingProjectRoot != null) {
      if (!parsedArgs.force) {
        console.log('WARNING: seems like a .lake directory already ' + ("exists at " + existingProjectRoot + ".\n                Use --force to overwrite the files in .lake/"));
        process.exit(1);
      }
      console.log('overwriting .lake directory');
    } else {
      console.log('creating .lake directory');
    }
    try {
      fs.mkdirSync('.lake');
    } catch (_error) {
      err = _error;
      if (err.code === 'EEXIST') {
        if (!parsedArgs.force) {
          console.log('please rm -rf .lake if you want to re-init. ' + 'I will not do such a thing for you.');
          process.exit(1);
        }
      } else {
        console.error("failed to create .lake directory: " + err);
        process.exit(1);
      }
    }
    debug('writing .lake/.gitignore');
    fs.writeFileSync('.lake/.gitignore', 'build');
    debug('creating .lake/build');
    try {
      fs.mkdirSync('.lake/build');
    } catch (_error) {
      err = _error;
      if (err.code === !'EEXIST') {
        console.error("failed to create .lake/build directory: " + err);
      }
    }
    debug('writing .lake/config');
    fs.writeFileSync('.lake/config', '# add your config here.\n; ' + ("created on " + (new Date()) + "\n"));
    debug('writing .lake/features');
    return fs.writeFileSync('.lake/features', "# created on " + (new Date()) + "\n");
  });

}).call(this);
